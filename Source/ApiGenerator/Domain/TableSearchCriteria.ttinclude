<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ output extension=".txt" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ parameter type="System.String" name="Common" #>
<#@ parameter type="System.String" name="Platform" #>
<#@ parameter type="System.String" name="DatabaseSchema" #>
<#@ parameter type="System.String" name="DatabaseTable" #>
<#@ parameter type="System.String" name="DomainEntity" #>
<#@ parameter type="System.String" name="DomainToolkit" #>
<#@ include file="$(ProjectDir)\Include.ttinclude" once="true" #><#
    
    var table = GetTable(DatabaseSchema, DatabaseTable);
    var columns = table.Columns;
    var primaryKey = table.PrimaryKey;

#>
using <#= Common #>.Contract;

namespace <#= Platform #>.Domain.<#= DomainToolkit #>;

public class <#= DomainEntity #>SearchCriteria : SearchCriteria
{
<#
for (int i = 0; i < primaryKey.Length; i++) 
{
    var column = primaryKey[i];
    var typeName = TypeNameOrAlias(column.DataType);
    var datatype = typeName;
    
    if (datatype != "string")
        datatype += "?";
    
    Write("    public " + datatype + " " + column.ColumnName + " { get; set; }");

    if (column.DataType == typeof(string) && !column.AllowDBNull)
        Write(" = null!;");
    
    WriteLine("");
}
#>
}