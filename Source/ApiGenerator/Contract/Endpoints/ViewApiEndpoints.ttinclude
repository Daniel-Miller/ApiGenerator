<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ output extension=".txt" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ parameter type="System.String" name="Platform" #>
<#@ include file="$(ProjectDir)\Include.ttinclude" once="true" #><#
    
    var all = new List<string>();

    var endpoints = GetEndpoints().Where(x => x.DatabaseObject == "View");

    var toolkits = endpoints.Select(x => x.DomainToolkit)
        .Distinct().OrderBy(x => x).ToList();
#>
namespace <#= Platform #>.Contract
{
    public static partial class ViewApiEndpoints
    { <# 
foreach (var toolkit in toolkits) 
{ 
    var toolsets = endpoints
        .Where(x => x.DomainToolkit == toolkit)
        .Select(x => x.DomainToolset)
        .Distinct().OrderBy(x => x).ToList();
#>

        public static partial class <#= toolkit #>Api
        { <#
    foreach (var toolset in toolsets) 
    { #>

            public static partial class <#= toolset #>
            { <#
        var entities = endpoints.Where(x => x.DomainToolkit == toolkit && x.DomainToolset == toolset)
            .Select(x => x.DomainEntity)
            .Distinct().OrderBy(x => x).ToList();

        foreach (var entity in entities)
        {
            var endpoint = endpoints.Single(x => x.DomainToolkit == toolkit && x.DomainToolset == toolset && x.DomainEntity == entity);
            var subtype = endpoint.DatabaseObject;

            var collection = $"{endpoint.EndpointBase}/{endpoint.EndpointCollection}";
            var item = $"/{endpoint.EndpointItem}";
            var search = $"/search";

            #>

                public static partial class <#= entity #>
                {
                    private const string _item = "<#= item #>";
                    private const string _search = "<#= search #>";

                    public const string Collection = "<#= collection #>";

                    public const string Item = Collection + _item;     // get one existing entity
                    public const string List = Collection;             // get all entities that match criteria
                    public const string Search = Collection + _search; // get search results that match criteria
                }
<# } #>
            }
    <# 
    } 
    #>
    }
<# 
} 
#>
    }
}