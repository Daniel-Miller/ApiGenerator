<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ output extension=".txt" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ parameter type="System.String" name="Common" #>
<#@ parameter type="System.String" name="Platform" #>
<#@ parameter type="System.String" name="DatabaseSchema" #>
<#@ parameter type="System.String" name="DatabaseTable" #>
<#@ parameter type="System.String" name="DomainEntity" #>
<#@ parameter type="System.String" name="DomainToolkit" #>
<#@ include file="$(ProjectDir)\Include.ttinclude" once="true" #><#
    
    var table = GetTable(DatabaseSchema, DatabaseTable);

    var fields = new List<DataColumn>();

    for (int i = 0; i < table.PrimaryKey.Length; i++)
        fields.Add(table.PrimaryKey[i]);

    foreach (DataColumn column in table.Columns)
    {
        if (column.ColumnName == "OrganizationIdentifier" || column.ColumnName == "OriginOrganization")
            if (!fields.Any(x => x.ColumnName == column.ColumnName))
                fields.Add(column);
    }
        
    fields.Sort(new EntityColumnComparer());

    var pkProperties = "";
    for (int i = 0; i < fields.Count; i++)
    {
        var column = fields[i];
        var typeName = TypeNameOrAlias(column.DataType);
        var datatype = typeName;
    
        if (datatype != "string")
            datatype += "?";

        pkProperties += "        public " + datatype + " " + column.ColumnName + " { get; set; }";

        if (i != fields.Count() - 1)
            pkProperties += "\r\n";
    }
#>
using System;

using <#= Common #>.Contract;

namespace <#= Platform #>.Contract.<#= DomainToolkit #>
{
    public partial class <#= DomainEntity #>Criteria : Criteria
    {
<#= pkProperties #>
    }
}